#!/bin/bash -e

# Configures various commands

THIS_SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null && pwd )"
source "${THIS_SCRIPT_DIR}/common"

configureGit() {
    if command -v git >/dev/null; then
        git config --global alias.confg 'config --global'

        if command -v emacs >/dev/null; then
            git confg core.editor 'emacs'
        elif command -v nano >/dev/null; then
            git confg core.editor nano
        fi

        if command -v less >/dev/null; then
            # Tabs stops are set one column from the left of the console,
            # then every 4 columns. Good for 'git diff', where the first
            # character is only to tell whether the line was deleted added,
            # or unchanged.
            git confg core.pager 'less -x1,5' || return
        fi

        local EXCLUDES_FILE="$HOME/.gitexcludes"
        touch "${EXCLUDES_FILE}" || return
        echo '/.vscode/' >> "${EXCLUDES_FILE}" || return
        echo '# Emacs temporary files' >> "${EXCLUDES_FILE}" || return
        echo '*~' >> "${EXCLUDES_FILE}" || return
        echo '.#*' >> "${EXCLUDES_FILE}" || return
        echo '\#*#' >> "${EXCLUDES_FILE}" || return
        echo '# CMake Presets for user --not meant to be in repos:' >> "${EXCLUDES_FILE}" || return
        echo '# https://cmake.org/cmake/help/latest/manual/cmake-presets.7.html#introduction' >> "${EXCLUDES_FILE}" || return
        echo 'CMakeUserPresets.json' >> "${EXCLUDES_FILE}" || return

        git confg core.excludesfile "${EXCLUDES_FILE}"
        git confg alias.conf config
        git confg color.ui auto
        git confg push.default simple
        git confg alias.h 'log --graph --decorate'
        git confg alias.bl blame
        git confg alias.c commit
        git confg alias.cam 'commit --amend'
        git confg alias.t tag
        git confg alias.p pull
        git confg alias.a 'add -A'
        git confg alias.ap 'add -Ap'
        git confg alias.s status
        git confg alias.m merge
        git confg alias.ma 'merge --abort'
        git confg alias.mb 'merge-base'
        git confg alias.reb rebase
        git confg alias.rebc 'rebase --continue'
        git confg alias.reba 'rebase --abort'
        git confg alias.rebs 'rebase --skip'
        git confg alias.rp rev-parse
        git confg alias.cp cherry-pick
        git confg alias.cpc 'cherry-pick --continue'
        git confg alias.cpa 'cherry-pick --abort'
        git confg alias.cps 'cherry-pick --skip'
        # git whatchanged is deprecated, so use git log instead for wc
        # https://stackoverflow.com/a/18585297/2252948
        git confg alias.wc 'log --raw --no-merges --graph --decorate'
        git confg alias.f fetch
        git confg alias.d diff
        git confg alias.r reset
        git confg alias.st stash
        git confg alias.ch checkout
        git confg alias.cl clone
        git confg alias.b branch
        git confg alias.bis bisect
        git confg alias.subm submodule
        git confg alias.submu 'submodule update'
        git confg alias.submuir 'submodule update --init --recursive'
        git confg alias.rev revert
        git confg alias.fp format-patch
    else
        messageStatus '"git" command not found in PATH. Not configuring Git.'
    fi
}

configureCommands() {
    configureGit || return
}
